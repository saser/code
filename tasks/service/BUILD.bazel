load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "service",
    srcs = ["service.go"],
    importpath = "go.saser.se/tasks/service",
    visibility = ["//visibility:public"],
    deps = [
        "//postgres",
        "//tasks/tasks_go_proto",
        "@com_github_golang_glog//:glog",
        "@com_github_google_uuid//:uuid",
        "@com_github_jackc_pgx_v4//:pgx",
        "@com_github_masterminds_squirrel//:squirrel",
        "@org_golang_google_grpc//codes",
        "@org_golang_google_grpc//status",
        "@org_golang_google_protobuf//proto",
        "@org_golang_google_protobuf//types/known/emptypb",
        "@org_golang_google_protobuf//types/known/fieldmaskpb",
        "@org_golang_google_protobuf//types/known/timestamppb",
    ],
)

go_test(
    name = "service_test",
    srcs = ["service_test.go"],
    data = ["//tasks/postgres:schema.sql"],
    embed = [":service"],
    deps = [
        "//postgres/postgrestest",
        "//tasks/tasks_go_proto",
        "@com_github_google_go_cmp//cmp",
        "@com_github_google_go_cmp//cmp/cmpopts",
        "@org_golang_google_grpc//:grpc",
        "@org_golang_google_grpc//codes",
        "@org_golang_google_grpc//credentials/insecure",
        "@org_golang_google_grpc//status",
        "@org_golang_google_grpc//test/bufconn",
        "@org_golang_google_protobuf//proto",
        "@org_golang_google_protobuf//testing/protocmp",
        "@org_golang_google_protobuf//types/known/fieldmaskpb",
    ],
)
