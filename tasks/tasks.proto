syntax = "proto3";

package tasks;

import "google/protobuf/empty.proto";
import "google/protobuf/field_mask.proto";
import "google/protobuf/timestamp.proto";

option go_package = "go.saser.se/tasks/tasks_go_proto";

service Tasks {
    // Get a single task by name.
    rpc GetTask(GetTaskRequest) returns (Task);

    // List tasks.
    rpc ListTasks(ListTasksRequest) returns (ListTasksResponse);

    // Create a new task.
    rpc CreateTask(CreateTaskRequest) returns (Task);

    // Update a single task.
    rpc UpdateTask(UpdateTaskRequest) returns (Task);

    // Delete a task by name.
    rpc DeleteTask(DeleteTaskRequest) returns (google.protobuf.Empty);
}

// A task is something that can be completed.
message Task {
    // The name of the task.
    // Format: tasks/{task}
    string name = 1;

    // The title of the task. Must be a short string.
    string title = 2;

    // The description of the task. Can be a long string. Not all tasks have
    // descriptions.
    string description = 3;

    // Whether the task has been completed.
    bool completed = 4;

    // When the task was created.
    google.protobuf.Timestamp create_time = 5;
}

message GetTaskRequest {
    // The name.
    // Format: tasks/{task}
    string name = 1;
}

message ListTasksRequest {
    // The standard page size. Optional. If unspecified, the server will choose
    // a suitable default. Values larger than 1000 will be truncated to 1000.
    int32 page_size = 1;

    // The standard page token. Optional. Get the values from responses to
    // ListTasks.
    string page_token = 2;
}

message ListTasksResponse {
    // The tasks.
    repeated Task tasks = 1;

    // The token required to get the next page in a subsequent call to
    // ListTasks.
    string next_page_token = 2;
}

message CreateTaskRequest {
    // The task to be created. The `name` field will be ignored. The `title`
    // field must not be empty, and the `completed` field, if specified, must be
    // false.
    Task task = 1;
}

message UpdateTaskRequest {
    // The task to be updated. The `name` field is used to specify which task to
    // update. Only fields with non-default values will be updated, as long as
    // they are specified in `update_mask`.
    //
    // Note that trying to update the `completed` field is an error -- there are
    // separate RPCs for that.
    Task task = 1;

    // A field mask of which fields to update. A nil or empty field mask will be
    // interpreted as updating all fields specified in `task`. Specifying a
    // single `*` means doing a full replacement of the task.
    google.protobuf.FieldMask update_mask = 2;
}

message DeleteTaskRequest {
    // The name.
    // Format: tasks/{task}
    string name = 1;
}
